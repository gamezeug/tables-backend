buildscript {
	ext {
		kotlinVersion = '1.3.0'
		springBootVersion = '2.1.0.RELEASE'
		cucumberVersion = '4.2.0'
		dockerUserId = "artun"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

plugins {
	id 'com.palantir.docker' version '0.20.1'
	id "org.sonarqube" version "2.6"
	id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
bootJar {
	mainClassName = 'com.gamezeug.tables.ApplicationKt'
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.security.oauth:spring-security-oauth2:2.3.7.RELEASE")
	implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.0.RELEASE")
	implementation("org.springframework.security:spring-security-jwt:1.0.11.RELEASE")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.glassfish.jaxb:jaxb-runtime:2.3.2")

	implementation("io.springfox:springfox-swagger2:2.9.2")
	implementation("io.springfox:springfox-swagger-ui:2.9.2")
	
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("io.cucumber:cucumber-java8:$cucumberVersion")
	testImplementation("io.cucumber:cucumber-junit:$cucumberVersion")
	testImplementation("io.cucumber:cucumber-spring:$cucumberVersion")
	testImplementation("org.assertj:assertj-core:3.11.1")
	testImplementation("org.hamcrest:hamcrest-all:1.3")
}

tasks['sonarqube'].with {
	dependsOn.clear()
}
jacoco {
    toolVersion = "0.8.2"
}
jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: 'com/gamezeug/tables/Application*')
		})
	}
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	name "${dockerUserId}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}

release {
	failOnCommitNeeded = true
	failOnPublishNeeded = false
	failOnSnapshotDependencies = true
	failOnUnversionedFiles = false
	failOnUpdateNeeded = false
	revertOnFail = false
}
